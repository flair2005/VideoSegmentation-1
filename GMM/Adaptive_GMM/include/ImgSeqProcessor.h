#ifndef IMGSEQPROCESSOR_H
#define IMGSEQPROCESSOR_H

//opencv
#include "opencv2/imgcodecs.hpp"
#include <opencv2/opencv.hpp>
#include "opencv2/imgproc.hpp"
#include "opencv2/videoio.hpp"
#include <opencv2/highgui.hpp>
#include <opencv2/video.hpp>
//C
#include <stdio.h>
//C++
#include <iostream>
#include <sstream>
#include <vector>
#include <string>
//user-define
#include "myDirBrowser.h"

using namespace cv;
using namespace std;

class ImgSeqProcessor
{
public:
    ImgSeqProcessor(){};
    ImgSeqProcessor(string filePath);
    ~ImgSeqProcessor(){};
    bool ReadNextFrame(Mat &frame);
    void processVideo();
    void processImgSeq();
    void saveBoundingRect(const Rect& r, const int r_num);
    bool Dilate(Mat &workMat, int erosion_elem, int erosion_size);
    bool Erode(Mat &workMat, int erosion_elem, int erosion_size);
    bool FindContours(Mat inArr, Mat &outArr);
private:
    myDirBrowser m_DB;
    Mat frame; //current frame
    long n_frame;
    int rectDirCount;
    std::string curr_frameDir;
    Mat fgMaskMOG2; //fg mask fg mask generated by MOG2 method
    Ptr<BackgroundSubtractor> pMOG2; //MOG2 Background subtractor
    string DirPath;
    std::vector<Rect> v_boundingRect; //存储本帧boundingRect
protected:
};

#endif // IMGSEQPROCESSOR_H
